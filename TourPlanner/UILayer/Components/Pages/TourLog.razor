@page "/tourlog"
@using Model
@using BusinessLayer.Service.Interface
@inject ITourService TourService
@inject ITourLogService TourLogService
@rendermode InteractiveServer

<PageTitle>TourLog Planner</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <div class="text-center">
                <h4><b>Your Tour Log</b></h4>
            </div>
            <!-- Rest des Formulars -->
            <form @ref="formRef">
                <div class="mb-3">
                    <label for="tour" class="form-label">Tour:</label>
                    <select id="tour" name="tour" class="form-select" @onchange="OnTourChanged" required>
                        <option value="" disabled selected>Select Tour</option>
                        @foreach (var tourModel in _tourModelList)
                        {
                            <option value="@tourModel.Id">@tourModel.Name</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="datum" class="form-label">Datum:</label>
                    <input type="date" id="datum" name="datum" class="form-control" @bind="_datum" required>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="difficulty" class="form-label">Difficulty:</label>
                        <select id="difficulty" name="difficulty" class="form-select" @bind="_difficulty" required>
                            <option value="" disabled>Tour Difficulty</option>
                            <option value="1">very easy</option>
                            <option value="2">easy</option>
                            <option value="3">okay</option>
                            <option value="4">difficult</option>
                            <option value="5">very difficult</option>
                        </select>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="rating" class="form-label">Rating:</label>
                        <select id="rating" name="rating" class="form-select" @bind="_rating" required>
                            <option value="" disabled>Rate Tour</option>
                            <option value="1">1 (very bad)</option>
                            <option value="2">2 (bad)</option>
                            <option value="3">3 (okay)</option>
                            <option value="4">4 (good)</option>
                            <option value="5">5 (very good)</option>
                        </select>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="totalDistance" class="form-label">Total Distance:</label>
                        <div class="input-group">
                            <input type="text" id="totalDistance" name="totalDistance" class="form-control" value="@_totalDistanceDisplay" readonly>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="totalTime" class="form-label">Total Time:</label>
                        <div class="input-group">
                            <input type="text" id="totalTime" name="totalTime" class="form-control" value="@_totalTimeDisplay" readonly>
                        </div>
                    </div>
                </div>

                <div class="mb-3">
                    <label for="comment" class="form-label">Comment:</label>
                    <textarea id="comment" name="comment" class="form-control" @bind="_comment" style="height:10px"></textarea>
                </div>
                <button type="submit" class="btn btn-primary" @onclick="CreateTourLog">Submit</button>
                <button type="button" class="btn btn-danger" @onclick="ResetForm">Reset</button>
            </form>

            <div class="mt-4">
                <h5>Tour Logs</h5>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Tour</th>
                            <th>Date</th>
                            <th>Difficulty</th>
                            <th>Rating</th>
                            <th>Comment</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var log in _tourLogModelList)
                        {
                            <tr>
                                <td>@log.TourId</td>
                                <td>@log.DateTime.ToShortDateString()</td>
                                <td>@log.Difficulty</td>
                                <td>@log.Rating</td>
                                <td>@log.Comment</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code {
    private Guid _selectedTourId;
    private TourLogModel _tourLogModel { get; set; } = new TourLogModel();
    private DateTime _datum = DateTime.Today;
    private int _difficulty;
    private int _rating;
    private string _totalDistanceDisplay;
    private string _totalTimeDisplay;
    private string _comment;
    private List<TourModel> _tourModelList { get; set; }
    private List<TourLogModel> _tourLogModelList { get; set; }

    private ElementReference formRef;

    protected override void OnInitialized()
    {
        LoadTourData();
        LoadTourLogs();
    }

    private async Task CreateTourLog()
    {
        // Überprüfen, ob das Formular gültig ist
        if (IsValidForm())
        {
            _tourLogModel.TourId = _selectedTourId;
            _tourLogModel.DateTime = _datum;
            _tourLogModel.Difficulty = _difficulty;
            _tourLogModel.Rating = _rating;
            _tourLogModel.Comment = _comment;

            await TourLogService.CreateTourLogAsync(_tourLogModel);
            LoadTourLogs();
            ResetForm();
        }
    }

    private bool IsValidForm()
    {
        return _selectedTourId != Guid.Empty &&
               _datum != default &&
               _difficulty > 0 &&
               _rating > 0;
    }

    private void LoadTourData()
    {
        _tourModelList = TourService.GetTours();
    }

    private void LoadTourLogs()
    {
        _tourLogModelList = TourLogService.GetTourLogs();
    }

    private void OnTourChanged(ChangeEventArgs e)
    {
        if (Guid.TryParse(e.Value.ToString(), out var selectedTourId))
        {
            _selectedTourId = selectedTourId;
            var selectedTour = _tourModelList.FirstOrDefault(t => t.Id == selectedTourId);
            if (selectedTour != null)
            {
                _totalDistanceDisplay = selectedTour.Distance.ToString();
                _totalTimeDisplay = selectedTour.EstimatedTime.ToString();
            }
            else
            {
                _totalDistanceDisplay = string.Empty;
                _totalTimeDisplay = string.Empty;
            }
        }
    }

    private void ResetForm()
    {
        // Setze die Werte aller Eingabefelder auf ihre Standardwerte zurück
        _selectedTourId = Guid.Empty;
        _datum = DateTime.Now;
        _difficulty = 0;
        _rating = 0;
        _totalDistanceDisplay = string.Empty;
        _totalTimeDisplay = string.Empty;
        _comment = string.Empty;
    }
}